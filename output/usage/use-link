Original page: https://solito.dev/usage/use-link

On this page

# useLink

    
    
    ts
    
    import { useLink } from 'solito/link'
    
    # or, for App Directory:
    
    import { useLink } from 'solito/navigation'
    
    Copy
    
    
    ts
    
    import { useLink } from 'solito/link'
    
    # or, for App Directory:
    
    import { useLink } from 'solito/navigation'
    
    Copy

A low-level hook that lets you create your own accessible Link component.

This is inspired by `useLinkProps` from React Navigation.

## Usageâ€‹

    
    
    tsx
    
    const linkProps = useLink({
    
      href,
    
      as,
    
      shallow,
    
      replace,
    
    })
    
    Copy
    
    
    tsx
    
    const linkProps = useLink({
    
      href,
    
      as,
    
      shallow,
    
      replace,
    
    })
    
    Copy

## Argumentsâ€‹

  * `href`: **required** The URL to link to. Either a `string` or `Url` object.
  * `as`: The URL to link to. Either a `string` or `Url` object.
  * `shallow`: `boolean`
  * `replace`: `boolean`

See the Next.js [Link API](https://nextjs.org/docs/api-reference/next/link)
for more details about these props.

## Returnsâ€‹

The hook returns the following values:

  * `href`: `string`
  * `onPress`: `function`
  * `accessibiltyRole`: `string`

You should spread these values directly onto your component:

    
    
    tsx
    
    const MyLink = ({ href, as, ...props }: Props) => {
    
      const linkProps = useLink({
    
        href,
    
        as,
    
      })
    
    Â 
    
      return <Pressable {...props} {...linkProps} />
    
    }
    
    Copy
    
    
    tsx
    
    const MyLink = ({ href, as, ...props }: Props) => {
    
      const linkProps = useLink({
    
        href,
    
        as,
    
      })
    
    Â 
    
      return <Pressable {...props} {...linkProps} />
    
    }
    
    Copy

## Full Exampleâ€‹

Here is an example of `useLink`, together with `MotiPressable` from
[`moti`](https://moti.fyi).

    
    
    tsx
    
    import { MotiPressableProps, MotiPressable } from 'moti/interactions'
    
    import { useLink, UseLinkProps } from 'solito/link'
    
    Â 
    
    export type MotiLinkProps = UseLinkProps &
    
      Omit<
    
        MotiPressableProps,
    
        // ignore props that will be overridden by useLink
    
        keyof UseLinkProps | keyof ReturnType<typeof useLink>
    
      >
    
    Â 
    
    export const MotiLink = (props: MotiLinkProps) => {
    
      const linkProps = useLink(props)
    
    Â 
    
      return <MotiPressable {...props} {...linkProps} />
    
    }
    
    Copy
    
    
    tsx
    
    import { MotiPressableProps, MotiPressable } from 'moti/interactions'
    
    import { useLink, UseLinkProps } from 'solito/link'
    
    Â 
    
    export type MotiLinkProps = UseLinkProps &
    
      Omit<
    
        MotiPressableProps,
    
        // ignore props that will be overridden by useLink
    
        keyof UseLinkProps | keyof ReturnType<typeof useLink>
    
      >
    
    Â 
    
    export const MotiLink = (props: MotiLinkProps) => {
    
      const linkProps = useLink(props)
    
    Â 
    
      return <MotiPressable {...props} {...linkProps} />
    
    }
    
    Copy

> This code snippet is the source code for Solito's [Moti
> integration](/usage/moti-link) ðŸ¤¯

You can now use `MotiLink` as if it were `MotiPressable`, along with the props
for our link:

    
    
    tsx
    
    <MotiLink
    
      animate={({ pressed }) => {
    
        'worklet'
    
        return {
    
          scale: pressed ? 0.9 : 1,
    
        }
    
      }}
    
      href="/artists/drake"
    
      as="/@drake"
    
    >
    
      <Text>Drake</Text>
    
    </MotiLink>
    
    Copy
    
    
    tsx
    
    <MotiLink
    
      animate={({ pressed }) => {
    
        'worklet'
    
        return {
    
          scale: pressed ? 0.9 : 1,
    
        }
    
      }}
    
      href="/artists/drake"
    
      as="/@drake"
    
    >
    
      <Text>Drake</Text>
    
    </MotiLink>
    
    Copy

[Edit this
page](https://github.com/nandorojo/solito/tree/master/docs/docs/usage/use-
link.mdx)

Last updated on **3/11/2024** by **Fernando Rojo**

[ PreviousScreen Params](/usage/params)

[NextSetup](/app-directory/overview)

  * Usage
  * Arguments
  * Returns
  * Full Example

